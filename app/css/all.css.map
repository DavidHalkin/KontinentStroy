{"version":3,"sources":["_fonts.scss","_header.scss","all.scss","../../bower_components/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAAA,iGAAiG;AAEjG,aACI,4BAA2B,CAC3B,sCAAqC,CACrC,iSAI+D,CAC/D,kBAAiB,CACjB,mBAAkB,EAAA;;AAEtB,aACI,6BAA4B,CAC5B,uCAAsC,CACtC,uSAIiE,CACjE,iBAAgB,CAChB,mBAAkB,EAAA;;ACtBtB,UACC,iBAAgB,CAChB,uBAAsB,EAItB;;AAND,oCAIE,mBAAkB,EAClB;;AAEF,YACC,gBAAe,CAEf,iBAAgB,EAQhB;;AAXD,cAKE,gBAAe,EAIf;;AATF,oBAOG,eAAc,EACd;;AAIH,UAEE,YAAW,EACX;;AAHF,gBAKE,sBAAqB,EACrB;;AANF,YAQE,eAAc,CACd,eAAc,EACd;;AAVF,aAYE,gBAAe,CACf,kBAAiB,CACjB,eAAc,CACd,gBAAe,CACf,6BAA4B,EAC5B;;AAEF,OACC,gBAAe,EAcf;;AAfD,YAGE,eAAc,CACd,gBAAe,CACf,oBAAmB,EAQnB;;AAbF,cAOG,YAAW,CACX,gBAAe,CACf,kBAAiB,CACjB,kBAAiB,EAEjB;;AAZH,oBAWW,sBAAqB,EAAG;;ACvCnC,SACC,6BAA4B,EAC5B;;AACD,WACC,iBAAgB,CAChB,kBAAiB,CACjB,YAAW,CACX,eAAc,EACd;;AACD,4BACC,gBAAe,CACf,kBAAiB,CACjB,YAAW,EAIX;;AAPD,kCAKE,YAAW,EACX;;AAEF,aACC,YAAW,CACX,kBAAiB,EACjB;;AACD,qBACC,gBAAe,CACf,kBAAiB,CACjB,qBAAoB,EA8BpB;;AAjCD,0BAMG,YAAW,EAKX;;AAXH,gCAQI,eAAc,CACd,sBAAqB,EACrB;;AAVJ,2BAaG,mBAAkB,CAClB,oBAAmB,EAiBnB;;AA/BH,iCAgBI,YAAW,CACX,YAAW,CACX,eAAc,CACd,YAAW,CACX,mBAAkB,CAClB,SAAQ,CACR,WAAU,CACV,oBAAmB,EACnB;;AAxBJ,sCA6BI,iBAAgB,EAChB;;AA9BJ,4CA2BK,cAAa,EACb;;AAML,gBACC,mBAAkB,EAqBlB;;AAtBD,oBAGE,YAAW,CACX,eAAc,CACd,aAAY,EACZ;;AANF,mBAQE,UAAS,CACT,YAAW,CACX,mBAAkB,CAClB,eAAc,CACd,gBAAe,CACf,kBAAiB,CACjB,YAAW,CACX,6BAA4B,CAC5B,mBAAkB,CAClB,SAAQ,CACR,UAAS,CACT,yCAA8B,CAA9B,qCAA8B,CAA9B,iCAA8B,CAC9B,cAAa,EACb;;AAEF,aACC,mBAAkB,CAClB,WAAU,EAWV;;AAbD,oBAIE,YAAW,CACX,mBAAkB,CAClB,YAAW,CACX,WAAU,CACV,YAAW,CACX,aAAY,CACZ,aAAY,CACZ,mDAAiD,EACjD;;AAEF,YACC,mBAAkB,EAIlB;;AALD,cAGE,UAAS,EACT;;AC9CE,4BDgDJ,gBACoC,qBAAoB,EACvD,EAAA;;AACD,oBACC,kBAAiB,EAiBjB;;AAlBD,uBAGE,qBAAoB,CACpB,gBAAe,CACf,kBAAiB,EACjB;;AANF,oCAQE,qBAAoB,EASpB;;AAjBF,sCAUG,eAAc,CACd,kBAAiB,EAKjB;;ACnEC,4BDmDJ,sCAaI,eAAc,CACd,eAAc,EAEf,EAAA","file":"all.css","sourcesContent":["/* This stylesheet generated by Transfonter (https://transfonter.org) on April 5, 2018 3:49 PM */\r\n\r\n@font-face {\r\n    font-family: 'Akrobat_bold';\r\n    src: url('../fonts/Akrobat-Bold.eot');\r\n    src: url('../fonts/Akrobat-Bold.eot?#iefix') format('embedded-opentype'),\r\n        url('../fonts/Akrobat-Bold.woff2') format('woff2'),\r\n        url('../fonts/Akrobat-Bold.woff') format('woff'),\r\n        url('../fonts/Akrobat-Bold.ttf') format('truetype'),\r\n        url('../fonts/Akrobat-Bold.svg#Akrobat-Bold') format('svg');\r\n    font-weight: bold;\r\n    font-style: normal;\r\n}\r\n@font-face {\r\n    font-family: 'Akrobat_black';\r\n    src: url('../fonts/Akrobat-Black.eot');\r\n    src: url('../fonts/Akrobat-Black.eot?#iefix') format('embedded-opentype'),\r\n        url('../fonts/Akrobat-Black.woff2') format('woff2'),\r\n        url('../fonts/Akrobat-Black.woff') format('woff'),\r\n        url('../fonts/Akrobat-Black.ttf') format('truetype'),\r\n        url('../fonts/Akrobat-Black.svg#Akrobat-Black') format('svg');\r\n    font-weight: 900;\r\n    font-style: normal;\r\n}",".header{\r\n\tbackground: #fff;\r\n\tpadding: 32px 0 36px 0;\r\n\t.btn-outline-light_orange{\r\n\t\tpadding: 15px 10px;\r\n\t}\r\n}\r\n.btn_menu{\r\n\tfont-size: 34px;\r\n\t\r\n\tmargin-top: 32px;\r\n\ti{\r\n\t\tcursor: pointer;\r\n\t\t&:hover{\r\n\t\t\tcolor: #ffc400;\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n.logo{\r\n\ta{\r\n\t\tcolor: #000;\r\n\t}\r\n\ta:hover{\r\n\t\ttext-decoration: none;\r\n\t}\r\n\timg{\r\n\t\tdisplay: block;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\tspan{\r\n\t\tfont-size: 25px;\r\n\t\tline-height: 26px;\r\n\t\tdisplay: block;\r\n\t\tmargin-top: 6px;\r\n\t\tfont-family: 'Akrobat_black';\r\n\t}\r\n}\r\n.etc{\r\n\tmargin-top: 4px;\r\n\tspan{\r\n\t\tdisplay: block;\r\n\t\tfont-size: 25px;\r\n\t\tmargin-bottom: 15px;\r\n\t\ta{\r\n\t\t\tcolor: #000;\r\n\t\t\tfont-size: 25px;\r\n\t\t\tline-height: 27px;\r\n\t\t\tmargin-left: 10px;\r\n\t\t\t&:hover{text-decoration: none;}\r\n\t\t}\r\n\t}\r\n\t\r\n}","\r\n@import\r\n\t'_custom_bootstrap_vatiables.scss',\r\n\t'_custom_bootstrap_vatiables.scss',\r\n\t'../../bower_components/bootstrap/scss/_functions.scss',\r\n\t'../../bower_components/bootstrap/scss/_variables.scss',\r\n\t'../../bower_components/bootstrap/scss/_mixins.scss',\r\n\t'fonts',\r\n\t'footer',\r\n\t'header';\r\nh1,h2{\r\n\tfont-family: 'Akrobat_black';\r\n}\r\n.wrapper{\r\n\toverflow: hidden;\r\n\tmax-width: 1920px;\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n.btn-outline-light_orange{\r\n\tfont-size: 20px;\r\n\tfont-weight: bold;\r\n\tcolor: #000;\r\n\t&:hover{\r\n\t\tcolor: #fff;\r\n\t}\r\n}\r\n.container{\r\n\twidth: 100%;\r\n\tmax-width: 1170px;\r\n}\r\n.breadcrumbs_block{\r\n\tfont-size: 20px;\r\n\tpadding-top: 49px;\r\n\tpadding-bottom: 29px;\r\n\tul{\r\n\t\ta{\r\n\t\t\tcolor: #000;\r\n\t\t\t&:hover{\r\n\t\t\t\tcolor: #ffcd26;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\tli{\r\n\t\t\tposition: relative;\r\n\t\t\tpadding-right: 70px;\r\n\t\t\t&:after{\r\n\t\t\t\tcontent: '';\r\n\t\t\t\twidth: 50px;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\theight: 1px;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\tright: 5px;\r\n\t\t\t\tbackground: #585656;\r\n\t\t\t}\r\n\t\t\t&:last-child{\r\n\t\t\t\t&:after{\r\n\t\t\t\t\tcontent: none;\r\n\t\t\t\t}\r\n\t\t\t\tpadding-right: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n.banner_title{\r\n\tposition: relative;\r\n\timg{\r\n\t\twidth: 100%;\r\n\t\tdisplay: block;\r\n\t\theight: auto;\r\n\t}\r\n\th1{\r\n\t\tmargin: 0;\r\n\t\twidth: 100%;\r\n\t\ttext-align: center;\r\n\t\tdisplay: block;\r\n\t\tfont-size: 56px;\r\n\t\tline-height: 58px;\r\n\t\tcolor: #fff;\r\n\t\tfont-family: 'Akrobat_black';\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform:translate(-50%,-50%);\r\n\t\tpadding: 10px;\r\n\t}\r\n}\r\n.styled_bg{\r\n\tposition: relative;\r\n\tz-index: 1;\r\n\t&:before{\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tz-index: -1;\r\n\t\ttop: -34px;\r\n\t\tleft: -10px; \r\n\t\twidth: 106px;\r\n\t\theight: 93px;\r\n\t\tbackground:url(../images/styled_bg.png) no-repeat;\r\n\t}\r\n}\r\n.about_us{\r\n\tpadding-top: 144px;\r\n\tp{\r\n\t\tmargin: 0;\r\n\t}\r\n}\r\n.pr-md_custom{\r\n\t@include media-breakpoint-up(md) { padding-right: 120px; }\r\n}\r\n.advantages_block{\r\n\tpadding-top: 80px;\r\n\th2{\r\n\t\tpadding-bottom: 50px;\r\n\t\tfont-size: 42px;\r\n\t\tline-height: 46px;\r\n\t}\r\n\t[class *= \"col-\"]{\r\n\t\tpadding-bottom: 35px;\r\n\t\tp{\r\n\t\t\tcolor: #383331;\r\n\t\t\tpadding-top: 10px;\r\n\t\t\t@include media-breakpoint-up(md) {\r\n\t\t\t\tmax-width: 80%;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}